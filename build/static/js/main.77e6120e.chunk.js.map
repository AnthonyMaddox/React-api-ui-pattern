{"version":3,"sources":["ButtonOne.js","ButtonTwo.js","ButtonThree.js","ButtonFour.js","App.js","serviceWorker.js","index.js"],"names":["ButtonOne","props","id","className","newQuote","ButtonTwo","console","log","newFoodQuote","ButtonThree","newGovQuote","ButtonFour","newAlcQuote","res","foodRes","govRes","alcRes","options","method","headers","Accept","App","handleRClick","e","preventDefault","quoteDiv","document","querySelector","classList","toggle","fetch","then","json","setState","dataReady","handleFClick","foodQuote","Math","floor","random","length","handleGClick","govQuote","handleAClick","alcQuote","state","onClick","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"kPAYeA,MAVf,SAAmBC,GACjB,OACE,6BACE,yBAAKC,GAAG,OAAOC,UAAU,SACtBF,EAAMG,SAAU,OCOVC,MAXf,SAAmBJ,GAEjB,OADAK,QAAQC,IAAIN,GAEV,6BACE,yBAAKC,GAAG,OAAOC,UAAU,SACtBF,EAAMO,gBCKAC,MAVf,SAAqBR,GACnB,OACE,6BACE,yBAAKC,GAAG,SAASC,UAAU,SACxBF,EAAMS,eCMAC,MAVf,SAAoBV,GAClB,OACE,6BACE,yBAAKC,GAAG,QAAQC,UAAU,SACvBF,EAAMW,eCCTC,EAAM,oDACNC,EAAU,gEACVC,EACJ,sEACIC,EACJ,mEACIC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,qBAoKGC,E,kDA/Jb,WAAYpB,GAAQ,IAAD,8BACjB,cAAMA,IASRqB,aAAe,SAACC,GACdA,EAAEC,iBACF,IAAIC,EAAWC,SAASC,cAAc,SACtCrB,QAAQC,IAAIkB,GACZA,EAASG,UAAUC,OAAO,WAC1BC,MAAMjB,EAAKI,GACRc,MAAK,SAAClB,GACL,OAAOA,EAAImB,UAEZD,MAAK,SAAClB,GACLP,QAAQC,IAAIM,GACZ,EAAKoB,SAAS,CACZ7B,SAAUS,EACVqB,WAAW,QAvBA,EA2BnBC,aAAe,SAACZ,GACdA,EAAEC,iBACF,IAAIC,EAAWC,SAASC,cAAc,SACtCrB,QAAQC,IAAIkB,GACZA,EAASG,UAAUC,OAAO,WAC1BC,MAAMhB,EAASG,GACZc,MAAK,SAACjB,GACL,OAAOA,EAAQkB,UAEhBD,MAAK,SAACjB,GACLR,QAAQC,IAAIO,GACZ,EAAKmB,SAAS,CACZG,UAAWtB,EAAQuB,KAAKC,MAAMD,KAAKE,SAAWzB,EAAQ0B,SACtDN,WAAW,QAxCA,EA4CnBO,aAAe,SAAClB,GACdA,EAAEC,iBACF,IAAIC,EAAWC,SAASC,cAAc,WACtCrB,QAAQC,IAAIkB,GACZA,EAASG,UAAUC,OAAO,WAC1BC,MAAMf,EAAQE,GACXc,MAAK,SAAChB,GACL,OAAOA,EAAOiB,UAEfD,MAAK,SAAChB,GACLT,QAAQC,IAAIQ,GACZ,EAAKkB,SAAS,CACZS,SAAU3B,EAAOsB,KAAKC,MAAMD,KAAKE,SAAWxB,EAAOyB,SACnDN,WAAW,QAzDA,EA6DnBS,aAAe,SAACpB,GACdA,EAAEC,iBACF,IAAIC,EAAWC,SAASC,cAAc,UACtCrB,QAAQC,IAAIkB,GACZA,EAASG,UAAUC,OAAO,WAC1BC,MAAMd,EAAQC,GACXc,MAAK,SAACf,GACL,OAAOA,EAAOgB,UAEfD,MAAK,SAACf,GACLV,QAAQC,IAAIS,GACZ,EAAKiB,SAAS,CACZW,SAAU5B,EAAOqB,KAAKC,MAAMD,KAAKE,SAAWvB,EAAOwB,SACnDN,WAAW,QAxEjB,EAAKW,MAAQ,CACXzC,SAAU,GACVgC,UAAW,GACXM,SAAU,GACVE,SAAU,GACVV,WAAW,GAPI,E,qDAgFjB,OACE,yBAAK/B,UAAU,WACb,yBAAKA,UAAU,OACb,uBAAGA,UAAU,YAAb,sBACqB,4DAGvB,yBAAKA,UAAU,OACb,yBAAKA,UAAU,gBACb,4BAAQA,UAAU,SAAS2C,QAASC,KAAKzB,cAAzC,gBAGA,kBAAC,EAAD,CAAWlB,SAAU2C,KAAKF,MAAMzC,WAChC,4BAAQD,UAAU,SAAS2C,QAASC,KAAKZ,cAAzC,cAGA,kBAAC,EAAD,CAAW3B,aAAcuC,KAAKF,MAAMT,YACpC,4BAAQjC,UAAU,SAAS2C,QAASC,KAAKN,cAAzC,oBAGA,kBAAC,EAAD,CAAa/B,YAAaqC,KAAKF,MAAMH,WACrC,4BAAQvC,UAAU,SAAS2C,QAASC,KAAKJ,cAAzC,iBAGA,kBAAC,EAAD,CAAY/B,YAAamC,KAAKF,MAAMD,gB,0CAOzB,IAAD,OAClBd,MAAMjB,EAAKI,GACRc,MAAK,SAAClB,GACL,OAAOA,EAAImB,UAEZD,MAAK,SAAClB,GACLP,QAAQC,IAAIM,GACZ,EAAKoB,SAAS,CACZ7B,SAAUS,EACVqB,WAAW,OAGjBJ,MAAMhB,EAASG,GACZc,MAAK,SAACjB,GACL,OAAOA,EAAQkB,UAEhBD,MAAK,SAACjB,GACLR,QAAQC,IAAIO,GACZ,EAAKmB,SAAS,CACZG,UAAWtB,EAAQuB,KAAKC,MAAMD,KAAKE,SAAWzB,EAAQ0B,SACtDN,WAAW,OAGjBJ,MAAMf,EAAQE,GACXc,MAAK,SAAChB,GACL,OAAOA,EAAOiB,UAEfD,MAAK,SAAChB,GACLT,QAAQC,IAAIQ,GACZ,EAAKkB,SAAS,CACZS,SAAU3B,EAAOsB,KAAKC,MAAMD,KAAKE,SAAWxB,EAAOyB,SACnDN,WAAW,OAGjBJ,MAAMd,EAAQC,GACXc,MAAK,SAACf,GACL,OAAOA,EAAOgB,UAEfD,MAAK,SAACf,GACLV,QAAQC,IAAIS,GACZ,EAAKiB,SAAS,CACZW,SAAU5B,EAAOqB,KAAKC,MAAMD,KAAKE,SAAWvB,EAAOwB,SACnDN,WAAW,W,GA1JHc,aCREC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF9B,SAAS+B,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB7B,MAAK,SAAA8B,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL1D,QAAQ0D,MAAMA,EAAMC,a","file":"static/js/main.77e6120e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nfunction ButtonOne(props) {\n  return (\n    <div>\n      <div id=\"bOne\" className=\"quote\">\n        {props.newQuote}{\" \"}\n      </div>\n    </div>\n  );\n}\n\nexport default ButtonOne;\n","import React, { Component } from \"react\";\n\nfunction ButtonTwo(props) {\n  console.log(props);\n  return (\n    <div>\n      <div id=\"bTwo\" className=\"quote\">\n        {props.newFoodQuote}\n      </div>\n    </div>\n  );\n}\n\nexport default ButtonTwo;\n","import React, { Component } from \"react\";\n\nfunction ButtonThree(props) {\n  return (\n    <div>\n      <div id=\"bThree\" className=\"quote\">\n        {props.newGovQuote}\n      </div>\n    </div>\n  );\n}\n\nexport default ButtonThree;\n","import React, { Component } from \"react\";\n\nfunction ButtonFour(props) {\n  return (\n    <div>\n      <div id=\"bFour\" className=\"quote\">\n        {props.newAlcQuote}\n      </div>\n    </div>\n  );\n}\n\nexport default ButtonFour;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport ButtonOne from \"./ButtonOne\";\nimport ButtonTwo from \"./ButtonTwo\";\nimport ButtonThree from \"./ButtonThree\";\nimport ButtonFour from \"./ButtonFour\";\n\nconst res = \"http://ron-swanson-quotes.herokuapp.com/v2/quotes\";\nconst foodRes = \"http://ron-swanson-quotes.herokuapp.com/v2/quotes/search/food\";\nconst govRes =\n  \"http://ron-swanson-quotes.herokuapp.com/v2/quotes/search/government\";\nconst alcRes =\n  \"http://ron-swanson-quotes.herokuapp.com/v2/quotes/search/alcohol\";\nconst options = {\n  method: \"GET\",\n  headers: {\n    Accept: \"application/json\",\n  },\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newQuote: [],\n      foodQuote: [],\n      govQuote: [],\n      alcQuote: [],\n      dataReady: false,\n    };\n  }\n  handleRClick = (e) => {\n    e.preventDefault();\n    let quoteDiv = document.querySelector(\"#bOne\");\n    console.log(quoteDiv);\n    quoteDiv.classList.toggle(\"display\");\n    fetch(res, options)\n      .then((res) => {\n        return res.json();\n      })\n      .then((res) => {\n        console.log(res);\n        this.setState({\n          newQuote: res,\n          dataReady: true,\n        });\n      });\n  };\n  handleFClick = (e) => {\n    e.preventDefault();\n    let quoteDiv = document.querySelector(\"#bTwo\");\n    console.log(quoteDiv);\n    quoteDiv.classList.toggle(\"display\");\n    fetch(foodRes, options)\n      .then((foodRes) => {\n        return foodRes.json();\n      })\n      .then((foodRes) => {\n        console.log(foodRes);\n        this.setState({\n          foodQuote: foodRes[Math.floor(Math.random() * foodRes.length)],\n          dataReady: true,\n        });\n      });\n  };\n  handleGClick = (e) => {\n    e.preventDefault();\n    let quoteDiv = document.querySelector(\"#bThree\");\n    console.log(quoteDiv);\n    quoteDiv.classList.toggle(\"display\");\n    fetch(govRes, options)\n      .then((govRes) => {\n        return govRes.json();\n      })\n      .then((govRes) => {\n        console.log(govRes);\n        this.setState({\n          govQuote: govRes[Math.floor(Math.random() * govRes.length)],\n          dataReady: true,\n        });\n      });\n  };\n  handleAClick = (e) => {\n    e.preventDefault();\n    let quoteDiv = document.querySelector(\"#bFour\");\n    console.log(quoteDiv);\n    quoteDiv.classList.toggle(\"display\");\n    fetch(alcRes, options)\n      .then((alcRes) => {\n        return alcRes.json();\n      })\n      .then((alcRes) => {\n        console.log(alcRes);\n        this.setState({\n          alcQuote: alcRes[Math.floor(Math.random() * alcRes.length)],\n          dataReady: true,\n        });\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"appBody\">\n        <div className=\"top\">\n          <p className=\"topTitle\">\n            Ron Swanson Quotes:<span>from the Ron Swanson Api</span>\n          </p>\n        </div>\n        <div className=\"App\">\n          <div className=\"accordianDiv\">\n            <button className=\"button\" onClick={this.handleRClick}>\n              Random Quote\n            </button>\n            <ButtonOne newQuote={this.state.newQuote} />\n            <button className=\"button\" onClick={this.handleFClick}>\n              Food Quote\n            </button>\n            <ButtonTwo newFoodQuote={this.state.foodQuote} />\n            <button className=\"button\" onClick={this.handleGClick}>\n              Government Quote\n            </button>\n            <ButtonThree newGovQuote={this.state.govQuote} />\n            <button className=\"button\" onClick={this.handleAClick}>\n              Alcohol Quote\n            </button>\n            <ButtonFour newAlcQuote={this.state.alcQuote} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    fetch(res, options)\n      .then((res) => {\n        return res.json();\n      })\n      .then((res) => {\n        console.log(res);\n        this.setState({\n          newQuote: res,\n          dataReady: true,\n        });\n      });\n    fetch(foodRes, options)\n      .then((foodRes) => {\n        return foodRes.json();\n      })\n      .then((foodRes) => {\n        console.log(foodRes);\n        this.setState({\n          foodQuote: foodRes[Math.floor(Math.random() * foodRes.length)],\n          dataReady: true,\n        });\n      });\n    fetch(govRes, options)\n      .then((govRes) => {\n        return govRes.json();\n      })\n      .then((govRes) => {\n        console.log(govRes);\n        this.setState({\n          govQuote: govRes[Math.floor(Math.random() * govRes.length)],\n          dataReady: true,\n        });\n      });\n    fetch(alcRes, options)\n      .then((alcRes) => {\n        return alcRes.json();\n      })\n      .then((alcRes) => {\n        console.log(alcRes);\n        this.setState({\n          alcQuote: alcRes[Math.floor(Math.random() * alcRes.length)],\n          dataReady: true,\n        });\n      });\n  }\n}\n\nexport default App;\n\n/*handleClick = (e) => {\n    e.preventDefault();\n    let quoteDiv = document.querySelectorAll(\".button\");\n    console.log(quoteDiv);\n    for (let i = 0; i < quoteDiv.length; i++) {\n      quoteDiv.classList.toggle(\"display\");\n    }\n  };*/\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}